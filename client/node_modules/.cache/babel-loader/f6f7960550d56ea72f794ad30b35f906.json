{"ast":null,"code":"var _jsxFileName = \"/Users/brianxiao/socialapp/client/src/components/comments/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n      return res.data;\n    })\n  });\n  console.log(data);\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      return makeRequest.post(\"/comments\", newComment);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries({\n        queryKey: [\"comments\"]\n      });\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"Fsi/C5X0aJaIFg1YxzJ6bbBdWOc=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/brianxiao/socialapp/client/src/components/comments/Comments.jsx"],"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","Comments","postId","desc","setDesc","currentUser","isLoading","error","data","queryKey","queryFn","get","then","res","console","log","queryClient","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","profilePic","target","value","map","comment","name","createdAt","fromNow"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\n\nconst Comments = ({ postId }) => {\n  const [desc, setDesc] = useState(\"\");\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () =>\n      makeRequest.get(\"/comments?postId=\" + postId).then((res) => {\n        return res.data;\n      }),\n  });\n\n  console.log(data);\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: (newComment) => {\n      return makeRequest.post(\"/comments\", newComment);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries({ queryKey: [\"comments\"] });\n    },\n  });\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    mutation.mutate({ desc, postId });\n    setDesc(\"\");\n  };\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input\n          type=\"text\"\n          placeholder=\"write a comment\"\n          value = {desc}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n        <button onClick={handleClick}>Send</button>\n      </div>\n      {isLoading\n        ? \"loading\"\n        : data.map((comment) => (\n            <div className=\"comment\">\n              <img src={comment.profilePic} alt=\"\" />\n              <div className=\"info\">\n                <span>{comment.name}</span>\n                <p>{comment.desc}</p>\n              </div>\n              <span className=\"date\">\n                {moment(comment.createdAt).fromNow()}\n              </span>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}